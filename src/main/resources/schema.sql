CREATE TABLE IF NOT EXISTS email
(
    email_id INT PRIMARY KEY NOT NULL,
    email    VARCHAR         NOT NULL
);

CREATE TABLE IF NOT EXISTS users
(
    user_id   INT PRIMARY KEY NOT NULL,
    login     VARCHAR         NOT NULL,
    user_name VARCHAR,
    birthday  DATE            NOT NULL,
    email_id  INT             NOT NULL,
    CONSTRAINT fk_users_email FOREIGN KEY (email_id) REFERENCES email (email_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS friends
(
    request_id     INT PRIMARY KEY                                                           NOT NULL,
    user_id        INT                                                                       NOT NULL REFERENCES users (user_id),
    friend_id      INT                                                                       NOT NULL REFERENCES users (user_id),
    request_status VARCHAR(10) CHECK (request_status IN ('pending', 'accepted', 'declined')) NOT NULL, --Изначально это должен был быть enum
    CONSTRAINT user_not_equals_friend CHECK (user_id != friend_id)
);

CREATE TABLE IF NOT EXISTS genre_names
(
    genre_id   INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    genre_name VARCHAR NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS films
(
    film_id     INTEGER PRIMARY KEY                                             NOT NULL,
    film_name   VARCHAR                                                         NOT NULL,
    description VARCHAR(200),
    release     DATE                                                            NOT NULL,
    duration    INT                                                             NOT NULL,
    rating      VARCHAR(5) CHECK (rating IN ('G', 'PG', 'PG-13', 'R', 'NC-17')) NOT NULL,
    CONSTRAINT date_is_after_1895_12_28 CHECK (release >= DATE '1895-12-28'),
    CONSTRAINT duration_is_longer_zero CHECK (duration > 0)
);

CREATE TABLE IF NOT EXISTS genre
(
    genre_id INT PRIMARY KEY NOT NULL,
    film_id  INT             NOT NULL,
    CONSTRAINT fk_film_id FOREIGN KEY (film_id) REFERENCES films (film_id) ON DELETE CASCADE,
    CONSTRAINT fk_genre_id FOREIGN KEY (genre_id) REFERENCES genre_names (genre_id),
    CONSTRAINT unique_film UNIQUE (film_id, genre_id)
);



CREATE TABLE IF NOT EXISTS likes
(
    like_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    film_id INT NOT NULL REFERENCES films (film_id),
    user_id INT NOT NULL REFERENCES users (user_id),
    CONSTRAINT unique_like UNIQUE (film_id, user_id)
)

